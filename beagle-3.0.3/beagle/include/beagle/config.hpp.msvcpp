#ifndef _BEAGLE_INCLUDE_BEAGLE_CONFIG_HPP
#define _BEAGLE_INCLUDE_BEAGLE_CONFIG_HPP 1
 
/* beagle/include/beagle/config.hpp. Generated automatically at end of configure. */
/* config/config-h.  Generated by configure.  */
/* config/config-h.in.  Generated from configure.in by autoheader.  */

/* define if full debug mode is active */
/* #undef BEAGLE_FULL_DEBUG */

/* define if bool is a built-in type */
#ifndef BEAGLE_HAVE_BOOL 
#define BEAGLE_HAVE_BOOL   
#endif

/* define if the compiler supports const_cast<> */
#ifndef BEAGLE_HAVE_CONST_CAST 
#define BEAGLE_HAVE_CONST_CAST   
#endif

/* define if the compiler supports default template parameters */
#ifndef BEAGLE_HAVE_DEFAULT_TEMPLATE_PARAMETERS 
#define BEAGLE_HAVE_DEFAULT_TEMPLATE_PARAMETERS   
#endif

/* Define to 1 if you have the <dlfcn.h> header file. */
// #ifndef BEAGLE_HAVE_DLFCN_H 
// #define BEAGLE_HAVE_DLFCN_H 1   
// #endif

/* define if the compiler supports dynamic_cast<> */
#ifndef BEAGLE_HAVE_DYNAMIC_CAST 
#define BEAGLE_HAVE_DYNAMIC_CAST   
#endif

/* define if the compiler supports exceptions */
#ifndef BEAGLE_HAVE_EXCEPTIONS 
#define BEAGLE_HAVE_EXCEPTIONS   
#endif

/* define if the compiler supports the explicit keyword */
#ifndef BEAGLE_HAVE_EXPLICIT 
#define BEAGLE_HAVE_EXPLICIT   
#endif

/* define if the compiler has hash_map */
/* #undef BEAGLE_HAVE_HASH_MAP */

/* define if the compiler has hash_set */
/* #undef BEAGLE_HAVE_HASH_SET */

/* Define to 1 if you have the <inttypes.h> header file. */
// #ifndef BEAGLE_HAVE_INTTYPES_H 
// #define BEAGLE_HAVE_INTTYPES_H  1 
// #endif

/* define if the macro isfinite exist */
/* #undef BEAGLE_HAVE_ISFINITE */

/* Define to 1 if you have the `z' library (-lz). */
// #ifndef BEAGLE_HAVE_LIBZ 
// #define BEAGLE_HAVE_LIBZ  1 
// #endif

/* define if long long int type is supported */
/* #undef BEAGLE_HAVE_LONG_LONG */

/* Define to 1 if you have the <memory.h> header file. */
// #ifndef BEAGLE_HAVE_MEMORY_H 
// #define BEAGLE_HAVE_MEMORY_H  1 
// #endif

/* define if the compiler implements namespaces */
#ifndef BEAGLE_HAVE_NAMESPACES 
#define BEAGLE_HAVE_NAMESPACES   
#endif

/* define if the compiler has numeric_limits<T> */
// #ifndef BEAGLE_HAVE_NUMERIC_LIMITS 
// #define BEAGLE_HAVE_NUMERIC_LIMITS   
// #endif

/* Define if you have POSIX threads libraries and header files. */
// #ifndef BEAGLE_HAVE_PTHREAD 
// #define BEAGLE_HAVE_PTHREAD  1 
// #endif

/* define if the compiler supports reinterpret_cast<> */
#ifndef BEAGLE_HAVE_REINTERPRET_CAST 
#define BEAGLE_HAVE_REINTERPRET_CAST   
#endif

/* define if the compiler supports Run-Time Type Identification */
#ifndef BEAGLE_HAVE_RTTI 
#define BEAGLE_HAVE_RTTI   
#endif

/* define if the compiler has stringstream */
#ifndef BEAGLE_HAVE_SSTREAM 
#define BEAGLE_HAVE_SSTREAM   
#endif

/* define if the compiler supports static_cast<> */
#ifndef BEAGLE_HAVE_STATIC_CAST 
#define BEAGLE_HAVE_STATIC_CAST   
#endif

/* define if the compiler supports ISO C++ standard library */
#ifndef BEAGLE_HAVE_STD 
#define BEAGLE_HAVE_STD   
#endif

/* Define to 1 if you have the <stdint.h> header file. */
// #ifndef BEAGLE_HAVE_STDINT_H 
// #define BEAGLE_HAVE_STDINT_H  1 
// #endif

/* Define to 1 if you have the <stdlib.h> header file. */
#ifndef BEAGLE_HAVE_STDLIB_H 
#define BEAGLE_HAVE_STDLIB_H  1 
#endif

/* define if the compiler supports Standard Template Library */
#ifndef BEAGLE_HAVE_STL 
#define BEAGLE_HAVE_STL   
#endif

/* Define to 1 if you have the <strings.h> header file. */
// #ifndef BEAGLE_HAVE_STRINGS_H 
// #define BEAGLE_HAVE_STRINGS_H  1 
// #endif

/* Define to 1 if you have the <string.h> header file. */
#ifndef BEAGLE_HAVE_STRING_H 
#define BEAGLE_HAVE_STRING_H  1 
#endif

/* Define to 1 if you have the <sys/stat.h> header file. */
// #ifndef BEAGLE_HAVE_SYS_STAT_H 
// #define BEAGLE_HAVE_SYS_STAT_H  1 
// #endif

/* Define to 1 if you have the <sys/types.h> header file. */
// #ifndef BEAGLE_HAVE_SYS_TYPES_H 
// #define BEAGLE_HAVE_SYS_TYPES_H  1 
// #endif

/* define if the compiler supports basic templates */
#ifndef BEAGLE_HAVE_TEMPLATES 
#define BEAGLE_HAVE_TEMPLATES   
#endif

/* define if the compiler supports template-qualified base class specifiers */
#ifndef BEAGLE_HAVE_TEMPLATE_QUALIFIED_BASE_CLASS 
#define BEAGLE_HAVE_TEMPLATE_QUALIFIED_BASE_CLASS   
#endif

/* define if the compiler supports template-qualified return types */
#ifndef BEAGLE_HAVE_TEMPLATE_QUALIFIED_RETURN_TYPE 
#define BEAGLE_HAVE_TEMPLATE_QUALIFIED_RETURN_TYPE   
#endif

/* define if the compiler supports function matching with argument types which
   are template scope-qualified */
#ifndef BEAGLE_HAVE_TEMPLATE_SCOPED_ARGUMENT_MATCHING 
#define BEAGLE_HAVE_TEMPLATE_SCOPED_ARGUMENT_MATCHING   
#endif

/* define if the compiler recognizes typename */
#ifndef BEAGLE_HAVE_TYPENAME 
#define BEAGLE_HAVE_TYPENAME   
#endif

/* Define to 1 if you have the <unistd.h> header file. */
// #ifndef BEAGLE_HAVE_UNISTD_H 
// #define BEAGLE_HAVE_UNISTD_H  1 
// #endif

/* define if some debug code is disabled */
/* #undef BEAGLE_NDEBUG */

/* Name of package */
#ifndef BEAGLE_PACKAGE 
#define BEAGLE_PACKAGE  "beagle-msvcpp" 
#endif

/* Define to the address where bug reports for this package should be sent. */
#ifndef BEAGLE_PACKAGE_BUGREPORT 
#define BEAGLE_PACKAGE_BUGREPORT  "" 
#endif

/* Define to the full name of this package. */
#ifndef BEAGLE_PACKAGE_NAME 
#define BEAGLE_PACKAGE_NAME  "" 
#endif

/* Define to the full name and version of this package. */
#ifndef BEAGLE_PACKAGE_STRING 
#define BEAGLE_PACKAGE_STRING  "" 
#endif

/* Define to the one symbol short name of this package. */
#ifndef BEAGLE_PACKAGE_TARNAME 
#define BEAGLE_PACKAGE_TARNAME  "" 
#endif

/* Define to the version of this package. */
#ifndef BEAGLE_PACKAGE_VERSION 
#define BEAGLE_PACKAGE_VERSION  "" 
#endif

/* Define to the necessary symbol if this constant uses a non-standard name on
   your system. */
/* #undef BEAGLE_PTHREAD_CREATE_JOINABLE */

/* Define to 1 if you have the ANSI C header files. */
#ifndef BEAGLE_STDC_HEADERS 
#define BEAGLE_STDC_HEADERS  1 
#endif

/* Version number of package */
#ifndef BEAGLE_VERSION 
#define BEAGLE_VERSION  "3.0.2" 
#endif

/* Disable irritating warnings under MS VC++ */
#pragma warning (disable : 4146)
#pragma warning (disable : 4180)
#pragma warning (disable : 4503)
 
/* _BEAGLE_INCLUDE_BEAGLE_CONFIG_HPP */
#endif
